# Ge2 JS UI - Function

## JS Class Init

`TaUIFunc()` extend `TaJSFunc()`, you we will only need this for both:

```
let ta = new TaUIFunc();
```

## themeswitch

```
<button onclick='ta.theme_switch(this)' data-theme='light'>
	<i class='dark' data-icon='adjust-2'></i>
	<i class='light' data-icon='adjust'></i>
	<span>Theme</span>
</button>
```

## htmlpart

htmlpart to make svg icon load on `display:none`

At your html:

```
<div id="htmlpart">
    <div index="x"><i data-icon="squaredâˆ’cross"></i></div>
</div>
```

At your javascript:ta. `htmlpart('x')`

```
dt.innerHTML = dt.innerHTML + ta.htmlpart('x');
// this will clone <div index="x"> innerHTML
```
## UpdateTitle

```
ta.updateTitle('.content h1')
```

## Generate TOC

```
ta.generateTOC('.main-content', '#toc', 'h2,h3');
```

## Class Manipulation

```
const element = document.getElementById('my-element');

// Get the class value
const classValue = ta.class.value(element);
console.log(classValue); // Output: the class value of the element

// Add a class
ta.class.add(element, 'new-class');

// Remove a class
ta.class.remove(element, 'old-class');

// Check if an element has a class
const hasClass = ta.class.has(element, 'my-class');
console.log(hasClass); // Output: true if the element has the 'my-class' class, false otherwise

// Rewrite the class
ta.class.rewrite(element, 'new-class-list');

// Toggle a class
ta.class.toggle(element, 'toggled-class');

// Add/remove a class on all elements of the same tag
ta.class.chained(element, 'common-class', 'add');
```


## Drag-n-drop

```
// Add the 'allowDrop' event listener to the drop target
const dropTarget = document.getElementById('drop-target');
dropTarget.addEventListener('dragover', (event) => ta.allowDrop(event));

// Add the 'drag' event listener to the draggable element
const draggableElement = document.getElementById('draggable-element');
draggableElement.addEventListener('dragstart', (event) => ta.drag(event));

// Add the 'drop' event listener to the drop target
dropTarget.addEventListener('drop', (event) => ta.drop(event));
```