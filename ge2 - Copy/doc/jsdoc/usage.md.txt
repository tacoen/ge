# Usage Example
Give example of `DOMContentLoaded` mostly, and how to chain them.
```
document.addEventListener("DOMContentLoaded", function() {
});
```



## func.js

* make `<pre>` `<code>` copyable
* generateTOC
* in this func.js `precancopy()` avaliable

```
function precancopy() {
    document.querySelectorAll('pre').forEach((el)=>{
        var span = document.createElement('span');
        span.className = 'copy';
        span.innerText = 'copy';
        el.appendChild(span);
        span.removeEventListener('click', dummy());
        span.addEventListener('click', function(e) {
            var text = span.closest('pre').querySelector('code').innerText;
            const textarea = document.createElement('textarea');
            textarea.classname = 'hide';
            textarea.value = text;
            document.body.appendChild(textarea);
            textarea.select();
            textarea.setSelectionRange(0, 99999);
            // For mobile devices
            // Copy the text to the clipboard
            // navigator.clipboard.writeText(textarea.value);
            // Copy the text to the clipboard
            document.execCommand('copy');
            document.body.removeChild(textarea);
            span.innerText = 'copied';
            ta.class.add(span.closest('pre'), 'copied')
            setTimeout(()=>{
                ta.class.remove(span.closest('pre'), 'copied')
            }
            , 3000);
        });
    }
    );
}
document.addEventListener("DOMContentLoaded", function() {
    ta.fetch('#sitemenu .container');
    taicon.delay();
    if (ta.is_elementExists('.tocindex')) {
        ta.generateTOC('.tocindex');
    }
    precancopy();
});
```
## jsdoc (inside this html page)

* Load usage.md.txt into `nav.sidebar`
* generateTOC
* make `<pre>` `<code>` copyable
* updateTitle

```
async function jsdoc(url) {
   try {
    ta.fetch('nav.sidebar');
    const response = await fetch(url);
    const markdown = await response.text();
    const el = document.querySelector('[markdown]');
    el.innerHTML = marked.parse(markdown);

	/* markdown then, where func.js will late */
		ta.generateTOC('.tocindex');
		precancopy();
		ta.updateTitle('.content h1')	

  } catch (error) {
    console.error('Error fetching or parsing Markdown:', error);
  }
}
document.addEventListener("DOMContentLoaded", function() {
    const md = ta.getQueryString('doc');
    if (md !== null) { 
        jsdoc(md); 
    } else {
        jsdoc('jsdoc/usage.md.txt');
    }
});

```
## script.js 
* fetch 'sitemenu'
* chain with pagesm() function
```
function pagesm() {
	document.getElementById('clone_sitemenu').innerHTML = document.querySelector("[data-fetch='_sitemenu.html']").innerHTML;
	taicon.delay();		
}
document.addEventListener("DOMContentLoaded", function() {
    ta.fetch('#sitemenu .container',null,'pagesm');
});
```
